{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "F:\\software\\lib\\site-packages\\pandas\\io\\excel.py:329: FutureWarning: The `sheetname` keyword is deprecated, use `sheet_name` instead\n",
      "  **kwds)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Glider cost of 40t truck in Euro: 60000\n",
      "Glider cost of 3.5t truck in Euro: 20000\n",
      "Glider cost of 3.5t truck in Euro: 40000\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "import os\n",
    "sys.path.append(r'F:\\TCOS\\Modules1\\validation') #define path and geeting python files\n",
    "\n",
    "import TCO_H as HDV #heavy duty vehicle\n",
    "import TCO_L as LDV #light duty vehicle\n",
    "import TCO_M as MDV #mmedium duty vehicle\n",
    "import TCO_B as BUS #local bus\n",
    "import TCO_c as CAR #passenger car\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import xlrd\n",
    "import scipy as sp\n",
    "import scipy.stats as stats\n",
    "import matplotlib.pyplot as plt\n",
    "import statistics\n",
    "from scipy.stats import norm\n",
    "from statistics import mode\n",
    "import datetime\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "year =[2020,2025,2030]#TCO calculation for year for all application\n",
    "lifetime =10 #lifetime for all application\n",
    "#light duty vehicle\n",
    "km=23936 #annual kilometer travelled [km]\n",
    "W_t=3.5 #gross vehicle weight [tonne]\n",
    "Range = [88,209] #mean range and 90% range [km]\n",
    "v = [0,1,2]  #used v[0] for minimum, v[1] mean, and v[2] maximum value individual year 2020, 2025, 2030\n",
    "q = [0,1,2] #used loop of minimum, mean, and maximum value\n",
    "y = [0,1]  #used  loop for Range (mean and 90% of trip)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#mdv\n",
    "\n",
    "km1 = 61200  #annual kilometer travelled [km]\n",
    "W_t1 = 7.5  #gross vehicle weight [tonne]\n",
    "Range1 = [225,498] #mean range and 90% range [km]\n",
    "u =[0,1] #used  loop for Range (mean and 90% of trip)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#HDV\n",
    "#for hdv\n",
    "lifetime=10\n",
    "km2=116960 #annual kilometer travelled [km]\n",
    "W_t2=40   #gross vehicle weight [tonne]\n",
    "Range2 = [430,724] #mean range and 90% range [km]\n",
    "l =[0,1] #used  loop for Range (mean and 90% of trip)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#car\n",
    "km3 = 27200  #annual kilometer travelled [km]\n",
    "Range3 = [100,368] #mean range and 95% range [km]\n",
    "tech = 1\n",
    "i =[0,1] #used  loop for Range (mean and 95% of trip)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#bus\n",
    "km4 = 66096 #annual kilometer travelled [km]\n",
    "Range4 = [243,329]  #mean range and 90% range [km]\n",
    "g =[0,1]  #used  loop for Range (mean and 90% of trip)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "Result1 =[]\n",
    "Result2 =[]\n",
    "Result3 =[]\n",
    "Result4 =[]\n",
    "Result5 =[]\n",
    "\n",
    "#first getting TCO result for the year 2020 and mean range with minimum, mean and maximum value respectively\n",
    "#second TCO result is presented for the year 2020 and 90% range with minimum, mean and maximum value respectively\n",
    "#this two steps occurs for the year 2025, and 2030\n",
    "\n",
    "for _ in year: #first loop used for year [2020, 2025, 2030]\n",
    "    for q in v: #second loop used for cost range of individual parameters [minimum, mean, maximum]\n",
    "        for y in Range: #third loop used for range [mean range and 90% range]\n",
    "            Result1.append(LDV.TCO(_,lifetime,km,W_t,y,q))\n",
    "for _ in year: #first loop used for year [2020, 2025, 2030]\n",
    "    for q in v: #second loop used for cost range of individual parameters [minimum, mean, maximum]\n",
    "        for u in Range1: #third loop used for range [mean range and 90% range]\n",
    "                Result2.append(MDV.TCO(_,lifetime,km1,W_t1,u,q))\n",
    "                \n",
    "for _ in year: #first loop used for year [2020, 2025, 2030]\n",
    "    for q in v: #second loop used for cost range of individual parameters [minimum, mean, maximum]\n",
    "        for l in Range2: #third loop used for range [mean range and 90% range]\n",
    "                Result3.append(HDV.TCO(_,lifetime,km2,W_t2,l,q)) \n",
    "for _ in year: #first loop used for year [2020, 2025, 2030]\n",
    "    for q in v: #second loop used for cost range of individual parameters [minimum, mean, maximum]\n",
    "        for i in Range3: #third loop used for range [mean range and 90% range]\n",
    "                Result4.append(CAR.TCO(_,lifetime,km3,i,tech,q))\n",
    "for _ in year: #first loop used for year [2020, 2025, 2030]\n",
    "    for q in v: #second loop used for cost range of individual parameters [minimum, mean, maximum]\n",
    "        for g in Range4: #third loop used for range [mean range and 90% range]\n",
    "                Result5.append(BUS.TCO(_,lifetime,km4,g,q))                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FCT</th>\n",
       "      <th>BET</th>\n",
       "      <th>DT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.559647</td>\n",
       "      <td>2.390589</td>\n",
       "      <td>2.048392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.393824</td>\n",
       "      <td>5.517091</td>\n",
       "      <td>2.391529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.794298</td>\n",
       "      <td>2.557337</td>\n",
       "      <td>2.117677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.790404</td>\n",
       "      <td>6.289842</td>\n",
       "      <td>2.559574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.003941</td>\n",
       "      <td>2.812032</td>\n",
       "      <td>2.163806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>4.124778</td>\n",
       "      <td>7.470166</td>\n",
       "      <td>2.671455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2.363897</td>\n",
       "      <td>2.283581</td>\n",
       "      <td>2.086038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3.066190</td>\n",
       "      <td>5.139352</td>\n",
       "      <td>2.477124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2.537387</td>\n",
       "      <td>2.437797</td>\n",
       "      <td>2.151102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3.401560</td>\n",
       "      <td>5.854029</td>\n",
       "      <td>2.634933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2.713554</td>\n",
       "      <td>2.696283</td>\n",
       "      <td>2.202185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3.722727</td>\n",
       "      <td>7.051923</td>\n",
       "      <td>2.758830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2.162901</td>\n",
       "      <td>2.213065</td>\n",
       "      <td>2.123867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2.717505</td>\n",
       "      <td>4.930730</td>\n",
       "      <td>2.563164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2.305171</td>\n",
       "      <td>2.351025</td>\n",
       "      <td>2.191794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3.051886</td>\n",
       "      <td>5.570073</td>\n",
       "      <td>2.727915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2.453993</td>\n",
       "      <td>2.540541</td>\n",
       "      <td>2.244051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3.401937</td>\n",
       "      <td>6.448338</td>\n",
       "      <td>2.854661</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         FCT       BET        DT\n",
       "0   2.559647  2.390589  2.048392\n",
       "1   3.393824  5.517091  2.391529\n",
       "2   2.794298  2.557337  2.117677\n",
       "3   3.790404  6.289842  2.559574\n",
       "4   3.003941  2.812032  2.163806\n",
       "5   4.124778  7.470166  2.671455\n",
       "6   2.363897  2.283581  2.086038\n",
       "7   3.066190  5.139352  2.477124\n",
       "8   2.537387  2.437797  2.151102\n",
       "9   3.401560  5.854029  2.634933\n",
       "10  2.713554  2.696283  2.202185\n",
       "11  3.722727  7.051923  2.758830\n",
       "12  2.162901  2.213065  2.123867\n",
       "13  2.717505  4.930730  2.563164\n",
       "14  2.305171  2.351025  2.191794\n",
       "15  3.051886  5.570073  2.727915\n",
       "16  2.453993  2.540541  2.244051\n",
       "17  3.401937  6.448338  2.854661"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#TCO calculation is presented as a dataframe for all three year and two range as well as minimum, mean and maximum value of TCO\n",
    "#first three column shows TCO result for the year 2020 and mean range with minimum, mean and maximum value respectively\n",
    "#second TCO result is presented for the year 2020 and 90% range with minimum, mean and maximum value respectively\n",
    "\n",
    "RES1=pd.DataFrame(Result1) #LDV\n",
    "RES2=pd.DataFrame(Result2)  #MDV\n",
    "RES3=pd.DataFrame(Result3)  #HDV\n",
    "RES4=pd.DataFrame(Result4) #CAR\n",
    "RES5=pd.DataFrame(Result5) #BUS\n",
    "RES1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BUS 2020 with mean range and 90% trip distribution\n",
    "FCEB = RES5[\"FCEB\"][0:5:2].tolist() #convert dataframe to list for fuel cell bus\n",
    "BEB = RES5[\"BEB\"][0:5:2].tolist() #convert dataframe to list for battery electric bus\n",
    "ICB  = RES5[\"ICB\"][0:5:2].tolist() #convert dataframe to list for diesel bus\n",
    "#90% range\n",
    "FCEB1 = RES5[\"FCEB\"][1:6:2].tolist()\n",
    "BEB1 = RES5[\"BEB\"][1:6:2].tolist()\n",
    "ICB1  = RES5[\"ICB\"][1:6:2].tolist()\n",
    "\n",
    "#BUS 2025 with mean range and 90% trip distribution\n",
    "FCEB2 = RES5[\"FCEB\"][6:11:2].tolist()\n",
    "BEB2 = RES5[\"BEB\"][6:11:2].tolist()\n",
    "ICB2  = RES5[\"ICB\"][6:11:2].tolist()\n",
    "#90 % range\n",
    "FCEB3 = RES5[\"FCEB\"][7:12:2].tolist()\n",
    "BEB3 = RES5[\"BEB\"][7:12:2].tolist()\n",
    "ICB3  = RES5[\"ICB\"][7:12:2].tolist()\n",
    "\n",
    "#BUS 2030 with mean range and 90% trip distribution\n",
    "FCEB4 = RES5[\"FCEB\"][12:17:2].tolist()\n",
    "BEB4 = RES5[\"BEB\"][12:17:2].tolist()\n",
    "ICB4  = RES5[\"ICB\"][12:17:2].tolist()\n",
    "#90% range\n",
    "FCEB5 = RES5[\"FCEB\"][13:18:2].tolist()\n",
    "BEB5 = RES5[\"BEB\"][13:18:2].tolist()\n",
    "ICB5  = RES5[\"ICB\"][13:18:2].tolist()\n",
    "\n",
    "#aftr getting list value for each year to find the mean value and standard deviation for each year and both range below for all individual application"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for BUS_2020 stochastic TCO with mean Range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB) #find mean value from the above list\n",
    "sd1 = np.std(ICB) #find standard deviation from the above list\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)  #monte carlo simlation run 10000 iteration\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.8, 3.5, r'$\\mu=2.563, σ=0.117$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB)\n",
    "sd2 = np.std(BEB)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(5, 0.75, r'$\\mu=4.957, σ=0.587$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB)\n",
    "sd3 = np.std(FCEB)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(3.8, 2, r'$\\mu=3.509, σ=0.2037$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for BUS_2020 stochastic TCO with 90 % range \n",
    "\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB1) #mean value\n",
    "sd1 = np.std(ICB1) #standard deviation\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(3, 2.6, r'$\\mu=2.8315, σ=0.1604$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB1) #mean value\n",
    "sd2 = np.std(BEB1) #standard deviation\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(8, 0.4, r'$\\mu=8.049, σ=1.148$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB1)\n",
    "sd3 = np.std(FCEB1)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(4, 1.6, r'$\\mu=4.0187, σ=0.2642$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\n",
    "#then this procedure will be done for the year 2020, 2025, and 2030 for all application with mean range as well as 90% trip distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BUS_2025\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB2)\n",
    "sd1 = np.std(ICB2)\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3, 3.4, r'$\\mu=2.681, σ=0.117$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB2)\n",
    "sd2 = np.std(BEB2)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(5, 0.65, r'$\\mu=4.708, σ=0.577$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB2)\n",
    "sd3 = np.std(FCEB2)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3.5, 1.8, r'$\\mu=3.194, σ=0.2007$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BUS_2025 with 90%\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB3)\n",
    "sd1 = np.std(ICB3)\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3, 2.58, r'$\\mu=2.979, σ=0.1607$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB3)\n",
    "sd2 = np.std(BEB3)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(8, 0.4, r'$\\mu=7.568, σ=1.128$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB3)\n",
    "sd3 = np.std(FCEB3)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(4, 1.5, r'$\\mu=3.62, σ=0.265$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BUS_2030\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB4)\n",
    "sd1 = np.std(ICB4)\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3, 3.25, r'$\\mu=2.774, σ=0.1217$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB4)\n",
    "sd2 = np.std(BEB4)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(4.5, 1, r'$\\mu=4.492, σ=0.454$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB4)\n",
    "sd3 = np.std(FCEB4)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3.2, 1.75, r'$\\mu=2.9783, σ=0.2259$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BUS_2030 with 90%\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICB5)\n",
    "sd1 = np.std(ICB5)\n",
    "plt.plot([],[], color='red', label='ICB')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3.4, 2.5, r'$\\mu=3.15, σ=0.1664$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEB5)\n",
    "sd2 = np.std(BEB5)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEB')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(7, 0.6, r'$\\mu=7.15, σ=0.889$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEB5)\n",
    "sd3 = np.std(FCEB5)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEB')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(4, 1.25, r'$\\mu=3.34, σ=0.3080$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#CAR 2020 with mean range and 95% trip distribution\n",
    "FCEV = RES4[\"FCEV\"][0:5:2].tolist()\n",
    "BEV = RES4[\"BEV\"][0:5:2].tolist()\n",
    "ICE  = RES4[\"ICE\"][0:5:2].tolist()\n",
    "#95% range\n",
    "FCEV1 = RES4[\"FCEV\"][1:6:2].tolist()\n",
    "BEV1 = RES4[\"BEV\"][1:6:2].tolist()\n",
    "ICE1  = RES4[\"ICE\"][1:6:2].tolist()\n",
    "\n",
    "#CAR 2025 with mean range and 95% trip distribution\n",
    "FCEV2 = RES4[\"FCEV\"][6:11:2].tolist()\n",
    "BEV2 = RES4[\"BEV\"][6:11:2].tolist()\n",
    "ICE2  = RES4[\"ICE\"][6:11:2].tolist()\n",
    "#95 % range\n",
    "FCEV3 = RES4[\"FCEV\"][7:12:2].tolist()\n",
    "BEV3 = RES4[\"BEV\"][7:12:2].tolist()\n",
    "ICE3  = RES4[\"ICE\"][7:12:2].tolist()\n",
    "\n",
    "#CAR 2030 with mean range and 95% trip distribution\n",
    "FCEV4 = RES4[\"FCEV\"][12:17:2].tolist()\n",
    "BEV4 = RES4[\"BEV\"][12:17:2].tolist()\n",
    "ICE4  = RES4[\"ICE\"][12:17:2].tolist()\n",
    "#95% range\n",
    "FCEV5 = RES4[\"FCEV\"][13:18:2].tolist()\n",
    "BEV5 = RES4[\"BEV\"][13:18:2].tolist()\n",
    "ICE5  = RES4[\"ICE\"][13:18:2].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for cAR_2020\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE)\n",
    "sd1 = np.std(ICE)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.15, 34, r'$\\mu=1.248, σ=0.0122$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV)\n",
    "sd2 = np.std(BEV)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.3, 10, r'$\\mu=1.235, σ=0.0382$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV)\n",
    "sd3 = np.std(FCEV)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.4, 4, r'$\\mu=1.445, σ=0.1125$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for cAR_2020 with 95%\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE1)\n",
    "sd1 = np.std(ICE1)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.3, 9.8, r'$\\mu=1.43, σ=0.044$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV1)\n",
    "sd2 = np.std(BEV1)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.55, 3.8, r'$\\mu=1.47, σ=0.111$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV1)\n",
    "sd3 = np.std(FCEV1)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.8, 2.4, r'$\\mu=1.68, σ=0.146$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#CAR_2025\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE2)\n",
    "sd1 = np.std(ICE2)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.1, 33.5, r'$\\mu=1.260, σ=0.0122$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV2)\n",
    "sd2 = np.std(BEV2)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.3, 10, r'$\\mu=1.219, σ=0.0376$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV2)\n",
    "sd3 = np.std(FCEV2)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.4, 6, r'$\\mu=1.35, σ=0.0729$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#CAR_2025 with 95 % range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE3)\n",
    "sd1 = np.std(ICE3)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1, 9, r'$\\mu=1.47, σ=0.0449$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV3)\n",
    "sd2 = np.std(BEV3)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1, 3.85, r'$\\mu=1.436, σ=0.1103$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV3)\n",
    "sd3 = np.std(FCEV3)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.6,3.9, r'$\\mu=1.556, σ=0.1101$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#CAR_2030\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE4)\n",
    "sd1 = np.std(ICE4)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.10, 32, r'$\\mu=1.273, σ=0.0126$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV4)\n",
    "sd2 = np.std(BEV4)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.09, 15, r'$\\mu=1.204, σ=0.0295$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV4)\n",
    "sd3 = np.std(FCEV4)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.25, 13, r'$\\mu=1.270, σ=0.0344$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#CAR_2030 with 90 % range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(ICE5)\n",
    "sd1 = np.std(ICE5)\n",
    "plt.plot([],[], color='red', label='ICEV')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.1, 9, r'$\\mu=1.51, σ=0.0465$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BEV5)\n",
    "sd2 = np.std(BEV5)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BEV')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.02, 4.2, r'$\\mu=1.399, σ=0.085$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCEV5)\n",
    "sd3 = np.std(FCEV5)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCEV')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.4, 4.9, r'$\\mu=1.44, σ=0.083$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#LDV 2020 with mean range and 90% trip distribution\n",
    "FCT = RES1[\"FCT\"][0:5:2].tolist()\n",
    "BET = RES1[\"BET\"][0:5:2].tolist()\n",
    "DT  = RES1[\"DT\"][0:5:2].tolist()\n",
    "#90% range\n",
    "FCT1 = RES1[\"FCT\"][1:6:2].tolist()\n",
    "BET1 = RES1[\"BET\"][1:6:2].tolist()\n",
    "DT1  = RES1[\"DT\"][1:6:2].tolist()\n",
    "\n",
    "#LDV 2025 with mean range and 90% trip distribution\n",
    "FCT2 = RES1[\"FCT\"][6:11:2].tolist()\n",
    "BET2 = RES1[\"BET\"][6:11:2].tolist()\n",
    "DT2  = RES1[\"DT\"][6:11:2].tolist()\n",
    "#90 % range\n",
    "FCT3 = RES1[\"FCT\"][7:12:2].tolist()\n",
    "BET3 = RES1[\"BET\"][7:12:2].tolist()\n",
    "DT3  = RES1[\"DT\"][7:12:2].tolist()\n",
    "\n",
    "#LDV 2030 with mean range and 90% trip distribution\n",
    "FCT4 = RES1[\"FCT\"][12:17:2].tolist()\n",
    "BET4 = RES1[\"BET\"][12:17:2].tolist()\n",
    "DT4  = RES1[\"DT\"][12:17:2].tolist()\n",
    "#90% range\n",
    "FCT5 = RES1[\"FCT\"][13:18:2].tolist()\n",
    "BET5 = RES1[\"BET\"][13:18:2].tolist()\n",
    "DT5  = RES1[\"DT\"][13:18:2].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for LDV_2020 with mean Range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT)\n",
    "sd1 = np.std(DT)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.2, 8.5, r'$\\mu=2.109, σ=0.04743$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET)\n",
    "sd2 = np.std(BET)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.3, 2.6, r'$\\mu=2.556, σ=0.173$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT)\n",
    "sd3 = np.std(FCT)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.85, 2, r'$\\mu=2.757, σ=0.181$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for LDV_2020 with 90% Range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT1)\n",
    "sd1 = np.std(DT1)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(3, 3.5,r'$\\mu=2.54, σ=0.1150$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET1)\n",
    "sd2 = np.std(BET1)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(6.5, 0.6, r'$\\mu=6.36, σ=0.803$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT1)\n",
    "sd3 = np.std(FCT1)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(4, 1.4, r'$\\mu=3.73, σ=0.298$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#LDV_2025 with mean range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT2)\n",
    "sd1 = np.std(DT2)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2.1, 8.4, r'$\\mu=2.146, σ=0.0475$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET2)\n",
    "sd2 = np.std(BET2)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2.4, 3.2, r'$\\mu=2.446, σ=0.1702$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT2)\n",
    "sd3 = np.std(FCT2)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2.62, 2, r'$\\mu=2.513, σ=0.1427$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#LDV_2025 with mean range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT3)\n",
    "sd1 = np.std(DT3)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3, 3.5, r'$\\mu=2.62, σ=0.1152$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET3)\n",
    "sd2 = np.std(BET3)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(6, 0.6, r'$\\mu=5.964, σ=0.789$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT3)\n",
    "sd3 = np.std(FCT3)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(4, 1.5, r'$\\mu=3.37, σ=0.268$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Ldv_2030 with mean Range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT4)\n",
    "sd1 = np.std(DT4)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2, 8.5,'$\\mu=2.186, σ=0.0492$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET4)\n",
    "sd2 = np.std(BET4)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':0.8})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2.45,2.8,\n",
    "         r'$\\mu=2.346, σ=0.1342$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT4)\n",
    "sd3 = np.std(FCT4)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.6})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2.3, 3.8, r'$\\mu=2.286, σ=0.118$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Ldv_2030 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT5)\n",
    "sd1 = np.std(DT5)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3, 3.4,'$\\mu=2.71, σ=0.1193$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET5)\n",
    "sd2 = np.std(BET5)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':0.8})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(5.2,0.8,r'$\\mu=5.60, σ=0.6621$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT5)\n",
    "sd3 = np.std(FCT5)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.6})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3.5, 1.5, r'$\\mu=3.034, σ=0.2794$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#MDV 2020 with mean range and 90% trip distribution\n",
    "FCT6 = RES2[\"FCT\"][0:5:2].tolist()\n",
    "BET6 = RES2[\"BET\"][0:5:2].tolist()\n",
    "DT6  = RES2[\"DT\"][0:5:2].tolist()\n",
    "#90% range\n",
    "FCT7 = RES2[\"FCT\"][1:6:2].tolist()\n",
    "BET7 = RES2[\"BET\"][1:6:2].tolist()\n",
    "DT7  = RES2[\"DT\"][1:6:2].tolist()\n",
    "\n",
    "#MDV 2025 with mean range and 90% trip distribution\n",
    "FCT8 = RES2[\"FCT\"][6:11:2].tolist()\n",
    "BET8 = RES2[\"BET\"][6:11:2].tolist()\n",
    "DT8  = RES2[\"DT\"][6:11:2].tolist()\n",
    "#90 % range\n",
    "FCT9 = RES2[\"FCT\"][7:12:2].tolist()\n",
    "BET9 = RES2[\"BET\"][7:12:2].tolist()\n",
    "DT9  = RES2[\"DT\"][7:12:2].tolist()\n",
    "\n",
    "#MDV 2030 with mean range and 90% trip distribution\n",
    "FCT10 = RES2[\"FCT\"][12:17:2].tolist()\n",
    "BET10 = RES2[\"BET\"][12:17:2].tolist()\n",
    "DT10  = RES2[\"DT\"][12:17:2].tolist()\n",
    "#90% range\n",
    "FCT11 = RES2[\"FCT\"][13:18:2].tolist()\n",
    "BET11 = RES2[\"BET\"][13:18:2].tolist()\n",
    "DT11  = RES2[\"DT\"][13:18:2].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for mDV_2020\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT6)\n",
    "sd1 = np.std(DT6)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1, 8.3, r'$\\mu=1.188, σ=0.0506$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET6)\n",
    "sd2 = np.std(BET6)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.7, 2, r'$\\mu=1.558, σ=0.193$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT6)\n",
    "sd3 = np.std(FCT6)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.5, 4, r'$\\mu=1.552, σ=0.1217$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for mDV_2020 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT7)\n",
    "sd1 = np.std(DT7)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2, 3.52, r'$\\mu=1.56, σ=0.1135$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET7)\n",
    "sd2 = np.std(BET7)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(3.5, 0.7, r'$\\mu=3.223, σ=0.6125$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT7)\n",
    "sd3 = np.std(FCT7)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.5, 2, r'$\\mu=2.22, σ=0.211$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#MDV_2025\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT8)\n",
    "sd1 = np.std(DT8)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1, 8.2, r'$\\mu=1.224, σ=0.0507$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET8)\n",
    "sd2 = np.std(BET8)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.6, 1.9, r'$\\mu=1.444, σ=0.190$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT8)\n",
    "sd3 = np.std(FCT8)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.3, 4.2, r'$\\mu=1.370, σ=0.1065$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#MDV_2025 with 90 %\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT9)\n",
    "sd1 = np.std(DT9)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2, 3.5, r'$\\mu=1.64, σ=0.1138$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET9)\n",
    "sd2 = np.std(BET9)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3, 0.8, r'$\\mu=2.9248, σ=0.6018$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT9)\n",
    "sd3 = np.std(FCT9)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2.3, 2, r'$\\mu=1.95, σ=0.205$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#mdv_2030\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT10)\n",
    "sd1 = np.std(DT10)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1, 8.1, r'$\\mu=1.265, σ=0.0525$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET10)\n",
    "sd2 = np.std(BET10)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(1.4, 3, r'$\\mu=1.341, σ=0.149$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT10)\n",
    "sd3 = np.std(FCT10)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(0.65, 4, r'$\\mu=1.201, σ=0.107$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#mdv_2030 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT11)\n",
    "sd1 = np.std(DT11)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2, 3.3, r'$\\mu=1.73, σ=0.1178$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET11)\n",
    "sd2 = np.std(BET11)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2.6, 1, r'$\\mu=2.6611, σ=0.47$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT11)\n",
    "sd3 = np.std(FCT11)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2, 1.7, r'$\\mu=1.70, σ=0.238$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#HDV 2020 with mean range and 90% trip distribution\n",
    "FCT12 = RES3[\"FCT\"][0:5:2].tolist()\n",
    "BET12 = RES3[\"BET\"][0:5:2].tolist()\n",
    "DT12  = RES3[\"DT\"][0:5:2].tolist()\n",
    "#90% range\n",
    "FCT13 = RES3[\"FCT\"][1:6:2].tolist()\n",
    "BET13 = RES3[\"BET\"][1:6:2].tolist()\n",
    "DT13  = RES3[\"DT\"][1:6:2].tolist()\n",
    "\n",
    "#HDV 2025 with mean range and 90% trip distribution\n",
    "FCT14 = RES3[\"FCT\"][6:11:2].tolist()\n",
    "BET14 = RES3[\"BET\"][6:11:2].tolist()\n",
    "DT14  = RES3[\"DT\"][6:11:2].tolist()\n",
    "#90 % range\n",
    "FCT15 = RES3[\"FCT\"][7:12:2].tolist()\n",
    "BET15 = RES3[\"BET\"][7:12:2].tolist()\n",
    "DT15  = RES3[\"DT\"][7:12:2].tolist()\n",
    "\n",
    "#HDV 2030 with mean range and 90% trip distribution\n",
    "FCT16 = RES3[\"FCT\"][12:17:2].tolist()\n",
    "BET16 = RES3[\"BET\"][12:17:2].tolist()\n",
    "DT16  = RES3[\"DT\"][12:17:2].tolist()\n",
    "#90% range\n",
    "FCT17 = RES3[\"FCT\"][13:18:2].tolist()\n",
    "BET17 = RES3[\"BET\"][13:18:2].tolist()\n",
    "DT17  = RES3[\"DT\"][13:18:2].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for HDV_2020\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT12)\n",
    "sd1 = np.std(DT12)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(1.5, 3.5, r'$\\mu=1.486, σ=0.111$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET12)\n",
    "sd2 = np.std(BET12)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.8, 0.7, r'$\\mu=2.399, σ=0.466$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT12)\n",
    "sd3 = np.std(FCT12)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.5, 2, r'$\\mu=2.12, σ=0.187$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for HDV_2020 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT13)\n",
    "sd1 = np.std(DT13)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(2.3, 2, r'$\\mu=1.93, σ=0.1879$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET13)\n",
    "sd2 = np.std(BET13)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(4, 0.55, r'$\\mu=3.8925, σ=0.9142$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT13)\n",
    "sd3 = np.std(FCT13)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2020')\n",
    "plt.text(3.2, 1.5, r'$\\mu=2.816, σ=0.2836$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "\n",
    "\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2020)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#HDV_2025\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT14)\n",
    "sd1 = np.std(DT14)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(1.5, 3.6, r'$\\mu=1.565, σ=0.1113$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET14)\n",
    "sd2 = np.std(BET14)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2.5, 0.9, r'$\\mu=2.153, σ=0.458$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT14)\n",
    "sd3 = np.std(FCT14)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(2, 2, r'$\\mu=1.82, σ=0.181$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#HDV_2025 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT15)\n",
    "sd1 = np.std(DT15)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(0.02, 2.3, r'$\\mu=2.06, σ=0.1883$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET15)\n",
    "sd2 = np.std(BET15)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3.85, 0.5, r'$\\mu=3.455, σ=0.8982$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT15)\n",
    "sd3 = np.std(FCT15)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2025')\n",
    "plt.text(3, 1.25, r'$\\mu=2.42, σ=0.289$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2025)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#hdv_2030\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT16)\n",
    "sd1 = np.std(DT16)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(0.5, 3.6, r'$\\mu=1.652, σ=0.115$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET16)\n",
    "sd2 = np.std(BET16)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2.2, 1.2, r'$\\mu=1.933, σ=0.361$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT16)\n",
    "sd3 = np.std(FCT16)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(0.4, 2, r'$\\mu=1.543, σ=0.209$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#hdv_2030 with 90% range\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "#for ICV\n",
    "mean1 = np.mean(DT17)\n",
    "sd1 = np.std(DT17)\n",
    "plt.plot([],[], color='red', label='ICT')\n",
    "data_normal = norm.rvs(size = 10000,loc = mean1,scale = sd1)\n",
    "ax = sns.distplot(data_normal,bins=100,kde=True,color='red',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(0, 2.2, r'$\\mu=2.213, σ=0.195$',fontsize=16)\n",
    "\n",
    "\n",
    "#for BEV\n",
    "mean2 = np.mean(BET17)\n",
    "sd2 = np.std(BET17)\n",
    "\n",
    "plt.plot([],[], color='blue', label='BET')\n",
    "data_normal1 = norm.rvs(size = 10000,loc = mean2,scale = sd2)\n",
    "ax1 = sns.distplot(data_normal1,bins=100,kde=True,color='blue',hist_kws={\"linewidth\":15,'alpha':1})\n",
    "ax1.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(3, 0.65, r'$\\mu=3.07, σ=0.7081$',fontsize=16)\n",
    "#for FCEB\n",
    "mean3 = np.mean(FCT17)\n",
    "sd3 = np.std(FCT17)\n",
    "\n",
    "plt.plot([],[], color='green', label='FCT')\n",
    "data_normal2 = norm.rvs(size = 10000,loc = mean3,scale = sd3)\n",
    "ax2 = sns.distplot(data_normal2,bins=100,kde=True,color='green',hist_kws={\"linewidth\":15,'alpha':0.7})\n",
    "ax2.set(xlabel='Euro/km',ylabel='Frequency',title='TCO in 2030')\n",
    "plt.text(2.5,1.25, r'$\\mu=2.06, σ=0.35$',fontsize=16)\n",
    "print(mean1)\n",
    "print(sd1)\n",
    "print(mean2)\n",
    "print(sd2)\n",
    "print(mean3)\n",
    "print(sd3)\n",
    "plt.style.use('bmh')\n",
    "#plt.grid()       \n",
    "plt.plot([],[], color='red')\n",
    "plt.plot([],[], color='blue')\n",
    "plt.plot([],[], color='green')\n",
    "ax.set_xlabel('TCO[€/km]', fontsize=16)\n",
    "ax.set_ylabel('Probability density', fontsize=16)\n",
    "ax.set_title('Stochastic TCO (2030)',fontsize=16)\n",
    "plt.legend(fontsize=16)\n",
    "plt.xticks(fontsize=16)\n",
    "plt.yticks(fontsize=16)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
